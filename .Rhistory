sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
totalrecords<-sum(complete.cases(id_subset))
records<-sum(pmatch(id,totalrecords,nomatch=flase,duplicates.ok=TRUE))
data.frame(id,records)
}complete<-function(directory,id=1:332) {
records<-sum(complete.cases(id)
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
records<-sum(complete.cases(id)
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id)
data.frame(id,records)
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id)
data.frame(id,records)
}
source('~/r Code/completeobservations.R')
)
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
s
data.frame(id,sum(complete.cases(id)))
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id))
count<- data.frame(id,records)
table(unlist(count))
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id))
count<- data.frame(id,table(unlist(records)))
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-na.omit(id)
dfrecords<- data.frame(records)
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
table(id_subset$ID)
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
return(table(id_subset$ID))
complete("specdata", c(1,5))
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id_subset))
data.frame(id,records)
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-sum(complete.cases(id_subset))
data.frame(id,records)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
table(id_subset,ID)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
table(id_subset,id)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
table(id_subset ID)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
table(id_subset ID)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
?table
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
as.table(id_subset)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
records<-omit.na(id_subset)
data.frame(id,records)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
?data.frame
?subset
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-!is.na(subset(sensor,ID %in% id))
data.frame(id,records)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-!is.na(subset(sensor,ID %in% id))
data.frame(id_subset)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete<-function(directory,id=1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-complete.cases(subset(sensor,ID %in% id))
data.frame(id_subset)
##This code extracts data into 1 data frame
##A data frame is retured which includes ID and total records.
}
complete("specdata", c(1,5))
complete <- function(directory, id = 1:332) {
files<-list.files(directory, full.names=TRUE)
nobs <- function(id) {
path <- file.path(directory, paste(sprintf("%03d", as.numeric(id)), ".csv", sep=""))
return (sum(complete.cases(read.csv(path))))
}
return (data.frame(id=id, nobs=sapply(id, nobs)))
complete <- function(directory, id = 1:332) {
files<-list.files(directory, full.names=TRUE)
nobs <- function(id) {
path <- file.path(directory, paste(sprintf("%03d", as.numeric(id)), ".csv", sep=""))
return (sum(complete.cases(read.csv(path))))
}
return (data.frame(id=id, nobs=sapply(id, nobs)))
}
complete("specdata", c(1,5))
corr <- function(directory, threshold = 0) {
tcorr <- function(fname) {
data <- read.csv(file.path(directory, fname))
nobs <- sum(complete.cases(data))
if (nobs > threshold) {
return (cor(data$nitrate, data$sulfate, use="complete.obs"))
}
}
tcorrs <- sapply(list.files(directory), tcorr) #get all correlations + NULLs
tcorrs <- unlist(tcorrs[!sapply(tcorrs, is.null)]) #remove NULLs
return (tcorrs)
}
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
pollutantmean<-function(directory,pollutant, id = 1:332) {
files<-list.files(directory, full.names=TRUE)
sensor<-data.frame()
for (i in 1:332){
sensor<-rbind(sensor,read.csv(files[i]))
}
id_subset<-(subset(sensor,ID %in% id))
mean(id_subset[,pollutant], na.rm=TRUE)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
initialize(swirl)
library(swirl)
install_from_swirl("R Programming")
swirl()
exit
>
?
help
help
quit
swirl()
library(datasets)
data("iris")
apply(iris,mean)
iris
head(iris)
apply(iris[,1:5], mean)
apply(iris,2,mean)
apply(iris,[,2],mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
tapply(iris$Species, iris$Sepal.Length, mean)
vapply(iris$Species, iris$Sepal.Length, mean)
vapply(iris$Species, iris$Sepal.Width, mean)
vapply(iris$Species, 2, mean)
vapply(iris$Species[,2] mean)
vapply(iris$Species, mean)
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
skip
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
sapply(iris,class)
sepal<-sapply(iris,class)
swirl()
skip()
skip()
swirl()
swirl()
skip()
skip()
skip()
skip()
skip()
skip()
tapply(iris$Species, iris$Sepal.Length,mean)
warnings()
class(iris$Species)
swirl(
)
swirl(
)
skip()
skip()
tapply(iris$Species, iris$Sepal.Length, mean)
tapply(iris$Sepal.Length, iris$Sepal.Species, mean)
table(iris)
class(iris)
iris
length(iris)
nrows(iris)
rows(iris)
tapply(iris$Species, iris$Sepal.Length, mean)
tapply(iris$Species, iris$Sepal.Length, sum)
tapply(iris$Species, iris$Sepal.Length, median)
apply(iris[101:150,2],mean)
apply(iris,[101:150,2],mean)
x<-iris
apply(x, iris[101:150,2],mean)
apply(x, iris[101:150,1],mean)
apply(x, iris[101:150,1],summary)
apply(x, iris[101:150,2],summary)
apply(
iris[101:150,1],summary)
apply(
iris[101:150,1],summary)
apply(iris[101:150,1],summary)
apply(iris,2,summary)
apply(iris,2,mean)
as.factor(iris$Species)
fact_species<-as.factor(iris$Species)
tapply(x,fact_species,iris$Sepal.Width,mean)
tapply(x,fact_species,mean)
tapply(x,iris$Species,mean)
tapply(x,iris$Species,summary)
tapply(iris$Species,iris$Sepal.Length,summary)
tapply(iris$Species,iris$Sepal.Length,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[, 1:4], 2, mean)
data("mtcars")
mtcars
sapply(mtcars, cyl, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl,mtcars$hp, mean)
tapply(mtcars$hp,mtcars$cyl, mean)
debug(ls)
ls
ls(y)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
getwd()
setwd(U:\ProgrammingAssignment2)
setwd("U:\ProgrammingAssignment2")
setwd("U:/ProgrammingAssignment2")
list.files()
source('U:/ProgrammingAssignment2/cachematrix.R')
m1<-(c(1,-1/4),c(-1/4,1))
(c(1,-1/4),c(-1/4,1))
B=matrix(c(1,-1/4,-1/4,1), nrow=2, ncol=2)
B
makeCacheMatrix(B)
u<-makeCacheMatrix(B)
u$get()
cacheSolve(u)
data
View(data)
View(x)
View(complete)
u
View(B)
B=matrix(c(1,-1/4,-1/4,1), nrow=2, ncol=2)
source('U:/ProgrammingAssignment2/cachematrix.R')
u<-makeCacheMatrix(B)
u$get()
